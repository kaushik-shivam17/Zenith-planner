{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Zenith Planner application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a task or activity that the user needs to complete.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the task."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Task)"
        },
        "title": {
          "type": "string",
          "description": "Title of the task."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the task."
        },
        "deadline": {
          "type": "string",
          "description": "Deadline for the task.",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the task is completed or not."
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "deadline",
        "completed"
      ]
    },
    "TimetableEvent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TimetableEvent",
      "type": "object",
      "description": "Represents a scheduled event in the user's timetable.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the timetable event."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N TimetableEvent)"
        },
        "taskId": {
          "type": "string",
          "description": "Reference to Task. (Relationship: Task 1:N TimetableEvent)"
        },
        "startTime": {
          "type": "string",
          "description": "Start time of the event.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "End time of the event.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "taskId",
        "startTime",
        "endTime"
      ]
    },
    "Reminder": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Reminder",
      "type": "object",
      "description": "Represents a reminder for the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the reminder."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Reminder)"
        },
        "type": {
          "type": "string",
          "description": "Type of reminder (e.g., break, sleep, hydration)."
        },
        "time": {
          "type": "string",
          "description": "Time for the reminder.",
          "format": "date-time"
        },
        "message": {
          "type": "string",
          "description": "Message to be displayed for the reminder."
        }
      },
      "required": [
        "id",
        "userId",
        "type",
        "time",
        "message"
      ]
    },
    "FocusTip": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "FocusTip",
      "type": "object",
      "description": "Represents a tip to improve focus and productivity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the focus tip."
        },
        "text": {
          "type": "string",
          "description": "The text content of the focus tip."
        }
      },
      "required": [
        "id",
        "text"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Allows only authenticated users to read/write their own profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/tasks/{taskId}",
        "definition": {
          "entityName": "Task",
          "schema": {
            "$ref": "#/backend/entities/Task"
          },
          "description": "Stores tasks associated with a specific user.  Allows only the authenticated user to read/write their own tasks.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "taskId",
              "description": "The unique identifier for the task."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/timetableEvents/{timetableEventId}",
        "definition": {
          "entityName": "TimetableEvent",
          "schema": {
            "$ref": "#/backend/entities/TimetableEvent"
          },
          "description": "Stores timetable events for a specific user.  Allows only the authenticated user to read/write their own timetable events.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "timetableEventId",
              "description": "The unique identifier for the timetable event."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/reminders/{reminderId}",
        "definition": {
          "entityName": "Reminder",
          "schema": {
            "$ref": "#/backend/entities/Reminder"
          },
          "description": "Stores reminders for a specific user.  Allows only the authenticated user to read/write their own reminders.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "reminderId",
              "description": "The unique identifier for the reminder."
            }
          ]
        }
      },
      {
        "path": "/focus_tips/{focusTipId}",
        "definition": {
          "entityName": "FocusTip",
          "schema": {
            "$ref": "#/backend/entities/FocusTip"
          },
          "description": "Stores global focus tips. Public read access.",
          "params": [
            {
              "name": "focusTipId",
              "description": "The unique identifier for the focus tip."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to ensure authorization independence, clarity, and scalability. It utilizes path-based ownership for user-specific data and avoids hierarchical authorization dependencies by denormalizing data where necessary. The structure also supports secure `list` operations by segregating data based on access requirements.\n\nThe `users/{userId}` collection stores user profiles.\n\nEach user has their own subcollections for tasks (`users/{userId}/tasks/{taskId}`), timetable events (`users/{userId}/timetableEvents/{timetableEventId}`), and reminders (`users/{userId}/reminders/{reminderId}`). This path-based ownership simplifies security rules and ensures that only the user can access their data. This approach facilitates secure `list` operations because the security rules can simply check if `request.auth.uid == userId`.\n\nFocus tips are stored in a global collection (`focus_tips/{focusTipId}`) since they are not user-specific and are read-only."
  }
}