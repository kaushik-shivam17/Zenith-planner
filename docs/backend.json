{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Zenith Planner application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a task that a user needs to complete.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Task entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Task)"
        },
        "title": {
          "type": "string",
          "description": "Title of the task."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the task."
        },
        "deadline": {
          "type": "string",
          "description": "Deadline for the task.",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the task is completed or not."
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "deadline",
        "completed"
      ]
    },
    "Subtask": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subtask",
      "type": "object",
      "description": "Represents a subtask of a larger task.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Subtask entity."
        },
        "taskId": {
          "type": "string",
          "description": "Reference to Task. (Relationship: Task 1:N Subtask)"
        },
        "description": {
          "type": "string",
          "description": "Description of the subtask."
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the subtask is completed or not."
        }
      },
      "required": [
        "id",
        "taskId",
        "description",
        "completed"
      ]
    },
    "ScheduleEntry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ScheduleEntry",
      "type": "object",
      "description": "Represents a scheduled time slot for a task.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the ScheduleEntry entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N ScheduleEntry)"
        },
        "taskId": {
          "type": "string",
          "description": "Reference to Task. (Relationship: Task 1:N ScheduleEntry)"
        },
        "startTime": {
          "type": "string",
          "description": "Start time of the scheduled entry.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "End time of the scheduled entry.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "taskId",
        "startTime",
        "endTime"
      ]
    },
    "Reminder": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Reminder",
      "type": "object",
      "description": "Represents a reminder for a specific event.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Reminder entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Reminder)"
        },
        "type": {
          "type": "string",
          "description": "Type of reminder (e.g., break, sleep, hydration)."
        },
        "time": {
          "type": "string",
          "description": "Time the reminder should be triggered.",
          "format": "date-time"
        },
        "message": {
          "type": "string",
          "description": "Message displayed in the reminder."
        }
      },
      "required": [
        "id",
        "userId",
        "type",
        "time",
        "message"
      ]
    },
    "FocusTip": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "FocusTip",
      "type": "object",
      "description": "Represents a tip to improve focus and productivity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the FocusTip entity."
        },
        "text": {
          "type": "string",
          "description": "The text content of the focus tip."
        }
      },
      "required": [
        "id",
        "text"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Authorization is based on path-based ownership (request.auth.uid == userId).",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/tasks/{taskId}",
        "definition": {
          "entityName": "Task",
          "schema": {
            "$ref": "#/backend/entities/Task"
          },
          "description": "Stores tasks owned by a specific user. Authorization is based on path-based ownership (request.auth.uid == userId).",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "taskId",
              "description": "The unique identifier for the task."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/tasks/{taskId}/subtasks/{subtaskId}",
        "definition": {
          "entityName": "Subtask",
          "schema": {
            "$ref": "#/backend/entities/Subtask"
          },
          "description": "Stores subtasks belonging to a specific task. Authorization is based on path-based ownership (request.auth.uid == userId).",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "taskId",
              "description": "The unique identifier for the task."
            },
            {
              "name": "subtaskId",
              "description": "The unique identifier for the subtask."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/scheduleEntries/{scheduleEntryId}",
        "definition": {
          "entityName": "ScheduleEntry",
          "schema": {
            "$ref": "#/backend/entities/ScheduleEntry"
          },
          "description": "Stores schedule entries for a specific user. Authorization is based on path-based ownership (request.auth.uid == userId).",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "scheduleEntryId",
              "description": "The unique identifier for the schedule entry."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/reminders/{reminderId}",
        "definition": {
          "entityName": "Reminder",
          "schema": {
            "$ref": "#/backend/entities/Reminder"
          },
          "description": "Stores reminders for a specific user. Authorization is based on path-based ownership (request.auth.uid == userId).",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "reminderId",
              "description": "The unique identifier for the reminder."
            }
          ]
        }
      },
      {
        "path": "/focusTips/{focusTipId}",
        "definition": {
          "entityName": "FocusTip",
          "schema": {
            "$ref": "#/backend/entities/FocusTip"
          },
          "description": "Stores global focus tips, accessible to all users.",
          "params": [
            {
              "name": "focusTipId",
              "description": "The unique identifier for the focus tip."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence, clarity, and scalability. User-owned data is stored under `/users/{userId}`. Tasks, subtasks, schedule entries, and reminders are all subcollections of the user, enabling simple path-based security rules. Focus tips are global and public, residing in a separate collection. This structure eliminates the need for `get()` calls in security rules, enabling atomic operations and simplifying debugging. List operations are secured via path-based ownership."
  }
}